using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.AI;

public class Monster : HealthSystem
{
    
    [SerializeField]private HealthSystem _target; //?????? ???? 
    [SerializeField] private NavMeshAgent _pathFinder; //???? ?????? ???????? AI ??????
    [SerializeField] private Animator _myAnimator; //?????? ?????????? ????
    
    [Header("Mostet INFO")]
    public float Damage = 10f;
    public float timeBetAccack = 0.5f; //???? ????
    public float AttackRange = 10f;
    private float lastAttackTime; //?????? ????????

    [SerializeField] LayerMask _whatIsTarget; //???????? ???????? ?????? ???? ????

    [Header("Effect")]
    public AudioSource MyAudiosource; //?????? ????
    public AudioClip hitSound; //?????? ???? ????
    public AudioClip deathSound; //?????? ???? ????


    [Header("Item")]
    public DropItem _item;
    //???? ?????? ?????? ???????? ????????
    private bool _hasTarget
    {
        get
        {
            //???????? Null?? ?????? ?????? ???? ??????????
            if (_target != null && !_target.isDead)
            {
                //?????????? hasTarget = ??
                return true;
            }
            else
                return false;
        }
    }

    private void Awake()
    {
        //?????? ????
        _pathFinder = GetComponent<NavMeshAgent>();
        _myAnimator = GetComponent<Animator>();
        MyAudiosource = GetComponent<AudioSource>();
    }

    //???????? ???????? ???? ?????? ????.
    public void Setup(float _health , float _damage, float _speed)
    {
        StartingHealth = _health; //????
        Damage = _damage; //??????
        _pathFinder.speed = _speed; //???????? ?????????? ?i???????? ????
    }

    private void Start()
    {
        StartCoroutine(UpdatePath());
    }
    private void Update()
    {
        _myAnimator.SetBool("HasTarget", _hasTarget);
    }
    //??????????.
    private IEnumerator UpdatePath()
    {
        //???? ????????
        while(!isDead)
        {
            //???? ?????? ??????
            if(_hasTarget)
            {
                _pathFinder.isStopped = false; //???????? ?????????? ???? ??????
                _pathFinder.SetDestination(_target.transform.position);//???????????????? ????????
            }
            else //?????????? ???????? ??????
            {
                _pathFinder.isStopped = true; //?????? ????????????

                //???? ???? b n
                Collider[] colliders = Physics.OverlapSphere(transform.position, AttackRange, _whatIsTarget);

                for(int i=0;i<colliders.Length;i++)
                {
                    //?????????? ?????????? ???? ?????? ?????? ?????? ??????
                    HealthSystem healthSystem = colliders[i].GetComponent<HealthSystem>();
                    //?????? ?????? ????
                    if(healthSystem!=null &&!healthSystem.isDead)
                    {
                        _target = healthSystem; //???? ?????? ???? ???????? ????

                        break; //?????? ???? ????
                    }
                }
            }
            //0.25???? ?????? ??????
            yield return new WaitForSeconds(0.25f); //
        }
    }

    //???????? ?????? 
    public override void OnDamage(float _damage )
    {
        //???????????? 
        if(!isDead)
        {
            //???? ?????? ?????? ????
            //_myAnimator.SetBool("Hit", _isHit);

        }
        //?????? ????
        base.OnDamage(Damage);
    }
    //???????? 
    public override void Die()
    {
        base.Die();

        //???? AI?? ???? ?????? ???????? ????????
        Collider[] enemyCol = GetComponents<Collider>();
        for(int i=0;i<enemyCol.Length; i++)
        {
            enemyCol[i].enabled = false;
        }
        _pathFinder.isStopped = true; //????
        _pathFinder.enabled = false; //?????????? ??

        //???? ?????????? ??????????
        _myAnimator.SetTrigger("Die");
        //???? ?????? ????????
    }
    //?????? ???? ????
    public void OnTriggerStay(Collider other)
    {
        //???????? ?????? ???????????? + ?????? ???? ???? ??????????
        if(!isDead && Time.time >= lastAttackTime + timeBetAccack)
        {
            //???????? ???????????? ???? 
            HealthSystem attacTarget = other.GetComponent<HealthSystem>();

            if(attacTarget!=null &&attacTarget ==_target)
            {
                //???? ???? ????
                lastAttackTime = Time.time;

                Vector3 hipoint = other.ClosestPoint(transform.position);
                Vector3 hitNomal = transform.position - other.transform.position;

                //???? ???? ?????? ???????? ???????? ????
                attacTarget.OnDamage(Damage);
            }
        }
    }
}
